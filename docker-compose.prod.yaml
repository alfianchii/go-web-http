services:
  app:
    build:
      context: .
      dockerfile: ./docker/go.prod.dockerfile
    container_name: go-web-app
    ports:
      - "${APP_PORT}:${APP_PORT}"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - mongo
      - postgres
    networks:
      - app-network
  
  nginx:
    build:
      context: .
      dockerfile: ./docker/nginx.prod.dockerfile
    container_name: nginx-proxy
    volumes:
      - ./docker/nginx/default.conf.template:/etc/nginx/conf.d/default.conf.template
      - ./docker/nginx/certs/fullchain.pem:/etc/nginx/certs/fullchain.pem:ro
      - ./docker/nginx/certs/privkey.pem:/etc/nginx/certs/privkey.pem:ro
    ports:
      - "${APP_NGINX_PORT}:80"
      - "${APP_NGINX_HTTPS_PORT}:443"
    env_file:
      - .env
    depends_on:
      - app
    networks:
      - app-network

  
  postgres:
    image: postgres:14
    container_name: postgres-db
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_HOST_AUTH_METHOD: trust
    networks:
      - app-network
  
  mongo:
    image: mongo:4.4
    container_name: mongo-db
    ports:
      - "${MONGODB_PORT}:${MONGODB_PORT}"
    volumes:
      - mongo-data:/data/db
    env_file:
      - .env
    environment:
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
    networks:
      - app-network
      
  redis:
    build:
      context: .
      dockerfile: ./docker/redis.dockerfile
    container_name: redis-cache
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes: 
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ./docker/redis/users.acl.template:/usr/local/etc/redis/users.acl.template
      - redis-cache:/data
    env_file:
      - .env
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
  mongo-data:
    driver: local
  redis-cache:
    driver: local